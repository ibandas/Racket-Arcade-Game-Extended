#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 68 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 2849 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 202
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |#falling-extensions|) (read-case-sensitive #t) (teachpacks ()) (h"
 #"tdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)"
 #"))"
) 0 0 4 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"The goal of this assignment is to extend your falling"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"game."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"In addition to the extensions listed below, find all"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"opportunities to abstr"
0 0 17 3 31 #"act the functions that you have"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"already written using map, filter, and other such"
0 0 17 29 1 #"\n"
0 0 17 3 23 #"higher-order functions."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"1) make objects that would be touching the paddle, if"
0 0 17 29 1 #"\n"
0 0 17 3 57 #"   they were at the bottom of the screen, look different."
0 0 17 29 1 #"\n"
0 0 17 3 37 #"   That is, help the player to unders"
0 0 17 3 22 #"tand the extent of the"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"   paddle with a subtly different faller image. (This"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"   applies to the new types of fallers you add for the"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"   second part of the homework too.)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"2) make a new type of faller, such that, when it touches"
0 0 17 29 1 #"\n"
0 0 17 3 59
#"   the paddle, the paddle gets wider and another such that,"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"   when it touches the paddle, the paddle gets narrower."
0 0 17 29 1 #"\n"
0 0 17 3 56 #"   These fallers should appear at regular intervals (not"
0 0 17 29 1 #"\n"
0 0 17 3 57 #"   randomly) in your game. For example, every 10th faller"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"   could be a shrinking faller, say."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"In order to avo"
0 0 17 3 38 #"id being overwhelmed by the changes to"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"the game, first be sure you have a good test suite for"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"your existing game. Second, pick only one small aspect"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"of the above bullets to work on first. Break the changes"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"up into two phases: a refactoring phase and then a"
0 0 17 29 1 #"\n"
0 0 17 3 52 #"semantics-breaking change. That is, first change the"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"program in such a way that the game plays the same as it"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"played before but that prepares you for the new game's"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"behavior. Once that change is implemented and tested,"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"then change the behavior in a second"
0 0 17 3 14 #" (usually much"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"easier) step. At each stage, make sure you have a"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"complete set of passing tests and, even better, check"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"each change in to git so you can exploit the 'git diff'"
0 0 17 29 1 #"\n"
0 0 17 3 8 #"command."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"Note that changing the data definition of Fw-World is a"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"good idea. Think carefully about the changes, though,"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"and don't be afraid to change your mind about what the"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"best changes are."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 53 #"Note that your final submission should be consistent,"
0 0 17 29 1 #"\n"
0 0 17 3 51 #"(i.e., make sure your signatures, templates, tests,"
0 0 17 29 1 #"\n"
0 0 17 3 54 #"bodies, etc etc are all matched up as if they had been"
0 0 17 29 1 #"\n"
0 0 17 3 56 #"written from scratch with the final data definitions you"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"end up using)."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Delete this when you have real code instead:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";                                                      ;"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";     ;;;;                                             ;"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";   ;;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";   ;       ;    ;  ; ;;;    ;;;;   ; ;;;    ;;;;    ;;;     ;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";   ;        ;   ;  ;;   ;  ;;  ;;  ;;  ;   ;    ;     ;    ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";    ;;      ;  ;   ;    ;  ;    ;  ;    ;  ;          ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";      ;;;   ;  ;   ;    ;  ;    ;  ;    ;  ;;;        ;    ;;;"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";         ;   ; ;   ;    ;  ;    ;  ;    ;     ;;;     ;       ;;;"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";         ;   ;;    ;    ;  ;    ;  ;    ;       ;     ;         ;"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";   ;    ;;   ;;    ;    ;  ;;  ;;  ;;  ;   ;    ;     ;    ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";    ;;;;;     ;    ;    ;   ;;;;   ; ;;;    ;;;;   ;;;;;;;  ;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";              ;                    ;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";             ;                     ;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";            ;;                     ;"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"For this exercise you will design and implement a"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"minimalistic, one finger input game. The player"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"controls a paddle that moves back and forth at the"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"bottom of the screen. Falling from the heavens are"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"some items that you're trying to capture on your"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"paddle. The paddle never stays still; it"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"continuously moves left and right along the bottom"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"of the screen."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"There is only a single kind of input accepted"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"(t"
0 0 17 3 42 #"hink like a thumb tap on a phone); the tap"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"reverses the direction of the paddle. That is, if"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"there is no input, then the paddle moves from the"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"left edge to the right edge and then back to the"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"left edge, over and over. When the user taps, then"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"the paddle re"
0 0 17 3 37 #"verses direction even when it isn\342\200\231t"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"at one of the edges. So, if the user wishes to"
0 0 17 29 1 #"\n"
0 0 17 3 41 #"keep the paddle in one spot, they can tap"
0 0 17 29 1 #"\n"
0 0 17 3 11 #"repeatedly."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"The player gets 10 points for each falling item"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"that the paddle catches and loses one point each"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"time they tap to reverse direction, but the score"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"never goes below zero."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"Use the world data definition given below; note"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"that there is some ambiguity in this definition."
0 0 17 29 1 #"\n"
0 0 17 3 42 #"For example, do the `Posn`s of the fallers"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"represent their centers or upper-left corners? You"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"will need to"
0 0 17 3 36 #" figure out issues like this one and"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"make sure your code is consistent."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"Either way, you should use the center of the"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"faller to determine if it has fallen off of the"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"bottom or if it has hit the paddle."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";   ;;;;;             ;"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";   ;    ;            ;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";   ;     ;   ;;;   ;;;;;;    ;;;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;     ;  ;   ;    ;      ;   ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;     ;      ;    ;          ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;     ;  ;;;;;    ;      ;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;     ; ;    ;    ;     ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;     ; ;    ;    ;     ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;    ;  ;   ;;    ;     ;   ;;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;;;;;    ;;; ;     ;;;   ;;; ;"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; A Faller-world is"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";   (make-fw Number Direction List-of-Posn Natural)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; interp.: if `a-fw` is a Faller-world then all of:"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; - (fw-paddle a-fw) is the x coordinate of the paddle,"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; - (fw-direction a-fw) gives which direction the paddle is moving,"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; - (fw-fallers a-fw) is a list of the positions of the fallers, and"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; - (fw-score a-fw) is the score."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 2 #"fw"
0 0 24 3 2 #" ("
0 0 14 3 6 #"paddle"
0 0 24 3 1 #" "
0 0 14 3 9 #"direction"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; A Direction is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - \"left\""
0 0 24 29 1 #"\n"
0 0 17 3 11 #"; - \"right\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; A List-of-Posn is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; - (cons Posn List-of-Posn)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; A Posn is (make-posn Real Real)"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; (Note: `Real` means a real number, which excludes complex numbers."
 #")"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";     ;;;;                            ;                       ;"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";    ;    ;                           ;                       ;"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";   ;        ;;;;   ; ;;;    ;;;;   ;;;;;;    ;;;   ; ;;;   ;;;;;;  "
 #" ;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";   ;       ;;  ;;  ;;   ;  ;    ;    ;      ;   ;  ;;   ;    ;     "
 #";    ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";   ;       ;    ;  ;    ;  ;         ;          ;  ;    ;    ;     "
 #";"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";   ;       ;    ;  ;    ;  ;;;       ;      ;;;;;  ;    ;    ;     "
 #";;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";   ;       ;    ;  ;    ;     ;;;    ;     ;    ;  ;    ;    ;     "
 #"   ;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";   ;       ;    ;  ;    ;       ;    ;     ;    ;  ;    ;    ;     "
 #"     ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";    ;    ; ;;  ;;  ;    ;  ;    ;    ;     ;   ;;  ;    ;    ;     "
 #";    ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";     ;;;;   ;;;;   ;    ;   ;;;;      ;;;   ;;; ;  ;    ;     ;;;  "
 #" ;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; You will use these named constants in the"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; definitions of your functions to determine the"
0 0 24 29 1 #"\n"
0 0 17 3 53
#";; world\342\200\231s dimensions and when fallers are created."
0 0 24 29 1 #"\n"
0 0 17 3 49
#";; Your program should still work\342\200\224with no other"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";; changes\342\200\224when these constants are adjusted (within"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; a reasonable range)."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 4 #")   "
0 0 17 3 14 #"; window width"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 3 #")  "
0 0 17 3 15 #"; window height"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MAX-FALLERS"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 5 #")    "
0 0 17 3 22 #"; maximum faller count"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"INV-P-FALLER"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")   "
0 0 17 3 47 #"; inverse of per-tick probability of new faller"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"For the first step, give your game some flavor."
0 0 17 29 1 #"\n"
0 0 17 3 9 #"Find or d"
0 0 17 3 37 #"esign an image to show as the falling"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"items and design an image to use as the paddle."
0 0 17 29 1 #"\n"
0 0 17 3 44 #"For the paddle, use `2htdp/image` to make an"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"image, but for the fallers you may find an image"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"online to include in your program (or you may"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"compose your own one using `2htdp/image`)."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"Make your falling image about 20 pixels tall and"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"20 pixels wide and make your paddle about 12"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"pixels tall and 50 pixels wide. Use `image-width`"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"and `image-height` to confirm the sizes."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"Please DO NOT paste the image that you find"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"directly int"
0 0 17 3 38 #"o your code because that makes version"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"control (Git) not work very well on the resulting"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"file. Instead, you should save the image as a file"
0 0 17 29 1 #"\n"
0 0 17 3 45 #"in this directory and load it in your program"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"using the `bitmap/file` function. For example, if"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"you save your faller"
0 0 17 3 30 #" image as `faller.jpg` (in the"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"same directory as this file), then you can load it"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"like this:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"  (define FALLER-IMAGE (bitmap/file \"faller.jpg\"))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"In order to a new file like `faller.jpg` to be"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"committed to Git and uploaded to GitHub (so that"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"we can see it "
0 0 17 3 34 #"when grading), you need to use the"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"`git add` command, like so:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"  $ git add faller.jpg"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"When you commit after `git add`, the file that you"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"added will be included in the commit."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"FALLER-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"FALLER-WILL-TOUCH-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-LENGTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-LENGTH"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";                                              ;"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";    ;;;;;;                           ;        ;"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";    ;                                ;"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";    ;      ;    ;  ; ;;;     ;;;   ;;;;;;   ;;;     ;;;;   ; ;;;   "
 #" ;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";    ;      ;    ;  ;;   ;   ;   ;    ;        ;    ;;  ;;  ;;   ;  "
 #";    ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";    ;;;;;  ;    ;  ;    ;  ;         ;        ;    ;    ;  ;    ;  "
 #";"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";    ;      ;    ;  ;    ;  ;         ;        ;    ;    ;  ;    ;  "
 #";;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";    ;      ;    ;  ;    ;  ;         ;        ;    ;    ;  ;    ;  "
 #"   ;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";    ;      ;    ;  ;    ;  ;         ;        ;    ;    ;  ;    ;  "
 #"     ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";    ;      ;   ;;  ;    ;   ;   ;    ;        ;    ;;  ;;  ;    ;  "
 #";    ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";    ;       ;;; ;  ;    ;    ;;;      ;;;  ;;;;;;;  ;;;;   ;    ;  "
 #" ;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"There are three separate pieces of the game to be"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"implemented: rendering the world to an image to be"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"shown on the screen, handling user inputs, and"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"adjusting the world as time passes."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"Here are the sigantures of the three functions:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"  draw : Faller-world -> Scene"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"  key : Faller-world Key-event -> Faller-world"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 37 #"  tick : Faller-world -> Faller-world"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"`draw` and `key` are fairly well-described by the"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"description above, but `tic"
0 0 17 3 22 #"k` needs a little more"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"explanation. Conceptually, it performs several"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"different tasks:"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #" 1. Move all the fallers down the screen by one"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"pixel."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #" 2. If a faller touches the bottom of the screen,"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"remove it from the world; if it overlaps with the"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"paddle, also"
0 0 17 3 21 #" increment the score."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 42 #" 3. Possibly add a new faller to the list,"
0 0 17 29 1 #"\n"
0 0 17 3 36 #"starting from the top of the screen."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 20 #" 4. Move the paddle."
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 49 #"Be sure to compose several different functions to"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"accomplish these tasks, and not just one"
0 0 17 29 1 #"\n"
0 0 17 3 39 #"monolithic function that does it all! ("
0 0 17 3 9 #"And think"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"carefully about how you might break up the other"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"two main functions, too.)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"Don't forget: the coordinate system has the"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"origin in the upper-left, with `x` coordinates"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"increasing rightward and `y` coordinates"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"increasing *downward*."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; NOTE ON DRAWING PADDLE:"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; (place-image PADDLE-IMAGE fw-paddle PADDLE-WIDTH BACKGROUND)"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; This will place the paddle image at the correct position"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";A Point is:"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; - (make-posn real real)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";A Fallers"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; -'()"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; - (cons point fallers)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";falling-update: Fallers Number -> Fallers"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #"; Returns a list of point by deleting the points when they get caugh"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 17 3 4 #"; by"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"paddle"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 5 #"touch"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"bottom"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 10 #" the scene"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Strategy: function composition "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"falling-update"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 3 #"num"
0 0 24 3 3 #") ("
0 0 14 3 13 #"reduce-helper"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 14 #"falling-update"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 14 #"falling-update"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 3 #"num"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"falling-update"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"51"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"61"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"falling-update"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"61"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";paddle-moving: Faller-world -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";Returns the x of paddle"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"paddle-moving"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"paddle-moving"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 2 #"99"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"paddle-moving"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 3 #"101"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";touch-helper: Point Number -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";Returns that if the faller touchs the paddle"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;Strategy: function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 1 #" "
0 0 14 3 8 #"paddle-x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 8 #"paddle-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"PADDLE-LENGTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"faller"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"76"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"touch-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 3 #")) "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";reduce-helper: Posn -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";Returns a boolean based on if the faller touches the bottom of the "
 #"scene"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";Strategy: function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"reduce-helper"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";teste:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"reduce-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"reduce-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 4 #"))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"reduce-helper"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";touch: Faller-world -> Faller-world"
0 0 24 29 1 #"\n"
0 0 17 3 108
(
 #";Returns the fallerworld with the updated score by adding ten points"
 #" everytime the paddle catches the faller"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";Strategy: function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"touch"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"len1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"len2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"falling-update"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 9 #"))))]    "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #")) "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"len1"
0 0 24 3 1 #" "
0 0 14 3 4 #"len2"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                    ( "
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"len1"
0 0 24 3 1 #" "
0 0 14 3 4 #"len2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 10 #"fw-example"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"touch"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"touch"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"touch"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"touch"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";reduce: Faller-world -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 93
(
 #";Returns the score by reducing one point everytime the faller touche"
 #"s the bottom of the scene"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";Strategy: function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reduce"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 13 #"reduce-helper"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"reduce"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reduce"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reduce"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 3 #")) "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"reduce"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"  "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 41 #";change-driection: Faller-world -> String"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Returns the direction the paddle will be next tick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"change-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 3 #")) "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 3 #")) "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fw-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"change-direction"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"change-direction"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"change-direction"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";key : Faller-world Key-event -> Faller-world"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";Builds a key event to control the paddle"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";Strategy: function composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 13 #"paddle-moving"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #"))) "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 13 #"paddle-moving"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #"))) "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #") ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";tests   "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"101"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"right"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";tick : Faller-world -> Faller-world"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";Builds a tick to make a new faller-world every tick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 13 #"paddle-moving"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 16 #"change-direction"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"falling-update"
0 0 24 3 2 #" ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"reduce"
0 0 24 3 1 #"("
0 0 14 3 5 #"touch"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";It's really hard to test this one..."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; draw-fallers: Fallers -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Draws all the fallers on top of the background"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Strategy: Function Composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-fallers"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 12 #"FALLER-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"draw-fallers"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"draw-fallers"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"() )"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #"; draw-paddle: Faller-World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Draws the paddle on top of the fallers scene"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Strategy: Function Composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 12 #"draw-fallers"
0 0 24 3 2 #" ("
0 0 14 3 10 #"fw-fallers"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-paddle"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-IMAGE"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"WORLD-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"PADDLE-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 12 #"draw-fallers"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; draw-score: Faller-World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; Draws the score on the top of the scene"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Strategy: Function Composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #")) "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"olive"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-paddle"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";tests:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-score"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"0"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"olive"
0 0 19 3 1 #"\""
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-paddle"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; draw: Faller-World -> Scene"
0 0 24 29 1 #"\n"
0 0 17 3 52 #"; Draws the entire scene with the paddle and fallers"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; Strategy : Structural Decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"draw-score"
0 0 24 3 1 #" "
0 0 14 3 10 #"fw-example"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 17 3 7 #";teste:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"draw"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"draw-score"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"left"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";                    ;;;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";   ;    ;             ;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";   ;    ;             ;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";   ;    ;   ;;;;      ;    ; ;;;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";   ;    ;   ;  ;;     ;    ;;  ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;;;;;;  ;    ;     ;    ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;    ;  ;;;;;;     ;    ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;    ;  ;          ;    ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";   ;    ;  ;          ;    ;    ;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";   ;    ;   ;         ;    ;;  ;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";   ;    ;   ;;;;;      ;;; ; ;;;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";                           ;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";                           ;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";                           ;"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; In your `tick` function, you need to"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; *sometimes* add a faller to the list of"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; fallers. Use a function like `maybe-add-faller`"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; (below) to (randomly) add a faller to the"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; current list. You may wish to adjust it based"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; on gameplay factors or the way you interpret"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; `Posn`s as fallers. Note that because of the"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; randomness, this function is difficult to test"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; using `check-expect`, so the test example given"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; below just checks the length of the resulting"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; list."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; maybe-add-faller : List-of-Posn -> List-of-Posn"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Adds a random faller with probabilty"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; `1/INV-P-FALLERS`, but only if there are fewer than `MAX-FALLERS`"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; fallers aleady."
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"length"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Strategy: decision tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"maybe-add-faller"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #") "
0 0 14 3 11 #"MAX-FALLERS"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 12 #"INV-P-FALLER"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD-WIDTH"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 7 #"fallers"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"fallers"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"change-color-faller"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; You'll use this `start` function to start your"
0 0 24 29 1 #"\n"
0 0 17 3 52
#";; faller game once you\342\200\231ve completed designing the"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; three main handler functions that it depends"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; on."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; start : Any -> Faller-world"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Starts the faller game. (Argument is ignored.)"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Example:"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";  - (start 0)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 6 #"_dummy"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 2 #" ("
0 0 14 3 7 #"make-fw"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 11 #"WORLD-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 6 #"right\""
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 21 3 5 #"1/200"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 24 3 2 #"  "
0 0 14 3 3 #"key"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 4 #"draw"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 5 #"start"
0 0 17 3 1 #" "
0 0 17 3 2 #"0)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
